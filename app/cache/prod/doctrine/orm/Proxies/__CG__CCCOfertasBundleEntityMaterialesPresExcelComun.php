<?php

namespace Proxies\__CG__\CCC\OfertasBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MaterialesPresExcelComun extends \CCC\OfertasBundle\Entity\MaterialesPresExcelComun implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setMaterial($material)
    {
        $this->__load();
        return parent::setMaterial($material);
    }

    public function getMaterial()
    {
        $this->__load();
        return parent::getMaterial();
    }

    public function setUm($um)
    {
        $this->__load();
        return parent::setUm($um);
    }

    public function getUm()
    {
        $this->__load();
        return parent::getUm();
    }

    public function setCantidad($cantidad)
    {
        $this->__load();
        return parent::setCantidad($cantidad);
    }

    public function getCantidad()
    {
        $this->__load();
        return parent::getCantidad();
    }

    public function setPrecio($precio)
    {
        $this->__load();
        return parent::setPrecio($precio);
    }

    public function getPrecio()
    {
        $this->__load();
        return parent::getPrecio();
    }

    public function setImporte($importe)
    {
        $this->__load();
        return parent::setImporte($importe);
    }

    public function getImporte()
    {
        $this->__load();
        return parent::getImporte();
    }

    public function setPorCCC($porCCC)
    {
        $this->__load();
        return parent::setPorCCC($porCCC);
    }

    public function getPorCCC()
    {
        $this->__load();
        return parent::getPorCCC();
    }

    public function setTransportacionCCC($transportacionCCC)
    {
        $this->__load();
        return parent::setTransportacionCCC($transportacionCCC);
    }

    public function getTransportacionCCC()
    {
        $this->__load();
        return parent::getTransportacionCCC();
    }

    public function setIdPresupuesto(\CCC\OfertasBundle\Entity\PresupuestoExcelComun $idPresupuesto = NULL)
    {
        $this->__load();
        return parent::setIdPresupuesto($idPresupuesto);
    }

    public function getIdPresupuesto()
    {
        $this->__load();
        return parent::getIdPresupuesto();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'material', 'um', 'cantidad', 'precio', 'importe', 'porCCC', 'transportacionCCC', 'idPresupuesto');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}